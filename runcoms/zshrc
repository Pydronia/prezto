#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

## Prompt customisation
RPROMPT="%(?..%F{red}%?%f )%F{#586e74}%*%f"

## Zsh options
# dotfile completions
_comp_options+=(globdots)
# disable completion beeps
unsetopt LIST_BEEP

## Misc Setup
# Setup direnv
eval "$(direnv hook zsh)"

# Activate Mise
eval "$(mise activate zsh)"

# Setup fzf
source <(fzf --zsh)


## Aliases
# tmux
alias tm="tmux"
alias tms="tmux new-session -A -s $(hostname -s)"

## Convenience Functions
# Push any configuration changes to dotfiles repo
# TODO:
# - Check remote for conflicts
function config-push {
(
	if [ -z "$1" ]; then
		printf "Usage: config-push <commit-message>\n"
		return 1
	fi
	cd $ZDOTDIR/.zprezto
	if [[ ! `git status --porcelain` ]]; then
		printf "No Prezto changes\n"
	else
		printf "Committing and pushing Prezto changes...\n"
		git add -A
		git commit -m "$1"
		git push
		printf "\n"
	fi
	cd ~/.config
	if [[ ! `git status --porcelain` ]]; then
		printf "No other config changes\n"
	else
		printf "Committing and pushing config changes...\n"
		git add -A
		git commit -m "$1"
		git push
	fi
)
}

# Fetch upstream updates from Prezto
function zprezto-upstream-pull {
(
	cd $ZDOTDIR/.zprezto
	printf "Fetching from upstream...\n"
	git fetch upstream
	commit_diff=$(git rev-list --count HEAD..upstream/master)
	if [ "$commit_diff" -gt 0 ]; then
		printf "Update found. Now merging...\n"
		git merge --no-edit upstream/master
		if [ $? -eq 0 ]; then
			printf "Updating submodules...\n"
			git submodule sync --recursive
			git submodule update --recursive --init
			return $?
		else
			printf "Error merging. Please resolve manually.\n"
			return 1
		fi
	else
		printf "No updates found.\n"
	fi
)
}

